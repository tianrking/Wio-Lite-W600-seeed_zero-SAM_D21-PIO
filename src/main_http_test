#include <rpcWiFi.h>
#include <WebServer.h>
#include "TFT_eSPI.h" // TFT屏幕库

TFT_eSPI tft;

const char* ssid = "nubia";      // Wi-Fi网络名称
const char* password = "22222222"; // Wi-Fi密码

WebServer server(80); // HTTP 服务器监听端口 80

String stockPrice = "Waiting for Data..."; // 默认股价数据
void setStockPrice(String newPrice);

// 函数：设置Wi-Fi并启动Web服务器
void setup() {
  Serial.begin(115200);
  delay(100);

  // 连接Wi-Fi
  Serial.print("Attempting to connect to Wi-Fi: ");
  Serial.println(ssid);
  WiFi.begin(ssid, password);

  // 检查Wi-Fi是否连接成功
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.print(".");
  }
  Serial.println("Connected to Wi-Fi!");
  Serial.print("IP Address: ");
  Serial.println(WiFi.localIP());

  // 初始化TFT屏幕
  tft.begin();
  tft.setRotation(3);
  tft.fillScreen(TFT_BLACK);
  tft.setTextSize(2);
  tft.setCursor((320 - tft.textWidth("Waiting for Data..")) / 2, 120);
  tft.print("Waiting for Data...");

  // 设置Web服务器路由
  server.on("/", HTTP_GET, []() {
    if (server.hasArg("stock_price")) {
      String newStockPrice = server.arg("stock_price");
      setStockPrice(newStockPrice);  // 更新股价
      server.send(200, "text/html", "Stock Price Updated: " + stockPrice);
    } else {
      server.send(200, "text/html", "Current Stock Price: " + stockPrice);
    }
  });

  // 启动服务器
  server.begin();
  Serial.println("Server started at: http://" + WiFi.localIP().toString());
}

void loop() {
  server.handleClient();  // 处理客户端请求

  // 如果接收到新的股价数据，更新显示
  if (stockPrice != "") {
    tft.fillScreen(TFT_BLACK);
    tft.setTextColor(TFT_WHITE);
    tft.setTextSize(3);
    tft.setCursor(20, 40);
    tft.print("Apple Stock Price:");

    tft.setTextSize(4);
    tft.setCursor(20, 80);
    tft.print(stockPrice);
  }
}

// 设置股价数据（本地Ubuntu会推送数据）
void setStockPrice(String newPrice) {
  stockPrice = newPrice;
}
